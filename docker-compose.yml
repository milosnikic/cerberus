version: '3.9'
services:
  frontend:
    build:
      context: .
      dockerfile: ./api/deployments/react-app/Dockerfile
    image: cerberus-front
    container_name: cerberus_front
    command: npm run start:react
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    depends_on:
      - api
  api:
    build:
      context: .
      dockerfile: ./api/deployments/drf-project/Dockerfile
    image: cerberus-api
    container_name: cerberus_api
    command: bash -c './wait-for-it.sh db:5432 && python manage.py migrate && python manage.py runserver 0.0.0.0:8000'
    volumes:
      - ./api:/cerberus-api
    environment:
      - DB_HOST=db
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
  db:
    image: postgres
    container_name: cerberus_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=cerberus
      - POSTGRES_PASSWORD=12345678
    ports:
      - 5432:5432
  redis:
    image: redis
    container_name: cerberus_redis
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
  celery-beat:
    build:
      context: .
      dockerfile: ./api/deployments/drf-project/Dockerfile
    image: cerberus-celery-beat
    container_name: cerberus_celery_beat
    command: celery -A config beat -l info
    volumes:
      - ./api:/cerberus-api
    environment:
      - CELERY_BROKER_BACKEND_HOST=redis
      - CELERY_BROKER_HOST=redis
    depends_on:
      - redis
  celery-worker:
    build:
      context: .
      dockerfile: ./api/deployments/drf-project/Dockerfile
    image: cerberus-celery-worker
    container_name: cerberus_celery_worker
    command: celery -A config worker -l info
    volumes:
      - ./api:/cerberus-api
    environment:
      - CELERY_BROKER_BACKEND_HOST=redis
      - CELERY_BROKER_HOST=redis
      - DB_HOST=db
    depends_on:
      - redis
volumes:
  postgres_data:
  redis_data: